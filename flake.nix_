{
  description = "DnF's NixOS configuration";

  inputs = {
    # To update nixpkgs (and thus NixOS), pick the nixos-unstable rev from
    # https://status.nixos.org/
    # 
    # This ensures that we always use the official # cache.
    nixpkgs.url = "github:nixos/nixpkgs/39c1857cd54397085932a84036f3aa95c8ef5aa3";
    home-manager.url = "github:nix-community/home-manager";

    nixos-hardware.url = "github:NixOS/nixos-hardware/master";
  };

  outputs = inputs@{ self, home-manager, nixpkgs, ... }:
    let

      system = "x86_64-linux";
      defaultPackage.x86_64-linux = self.packages.x86_64-linux;
      packages.x86_64-linux = system.legacyPackages.x86_64-linux;
      legacyPackages.x86_64-linux = system.legacyPackages.x86_64-linux;
      
      mkHomeMachine = configurationNix: extraModules: nixpkgs.lib.nixosSystem {
        inherit system;

        # Arguments to pass to all modules.
        specialArgs = { inherit system inputs; };
        modules = ([
          # System configuration
          configurationNix

          # Features common to all of my machines
        #   ./features/self-ide.nix
          ./features/caches
        #   ./features/current-location.nix
          ./features/passwordstore.nix
          ./features/v2ray.nix
          ./features/zerotierone.nix
        #   ./features/syncthing.nix
        #   ./features/protonvpn.nix
        #   ./features/monitor-brightness.nix

          # home-manager configuration
          home-manager.nixosModules.home-manager
          {
            home-manager.useGlobalPkgs = true;
            home-manager.useUserPackages = true;
            home-manager.users.dnf = import ./home.nix {
              inherit inputs system;
              pkgs = import nixpkgs { inherit system; };
            };
          }
        ] ++ extraModules);
      };
    in
    {
      nixosConfigurations.wl = mkHomeMachine
        ./hosts/wl.nix
        [
            
          ./features/plasma5.nix
          ./features/server-mode.nix
          ./features/postgrest.nix
        ];
    };
}